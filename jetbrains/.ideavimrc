let mapleader = "\<Space>"

"source ~/.intellimacs/spacemacs.vim
"
"" (Optional) Enable other Intellimacs modules
"source ~/.intellimacs/extra.vim
"source ~/.intellimacs/major.vim
"source ~/.intellimacs/hybrid.vim
"
"" (Optional) Enable which-key plugin
"source ~/.intellimacs/which-key.vim

" (Optional) My own vim commands
nnoremap Y y$
nnoremap x "_x
nnoremap X "_X
nnoremap d "_d
nnoremap D "_D
nnoremap c "_c
nnoremap C "_C
nnoremap s "_s
nnoremap S "_S

" (Optional) Add/edit actions

nnoremap <leader>gd :action GotoDeclaration<CR>
vnoremap <leader>gd <Esc>:action GotoDeclaration<CR>

nnoremap <leader>= :action ReformatCode<CR>
vnoremap <leader>= :action ReformatCode<CR>

nnoremap <leader><C-[> <Esc>
vnoremap <leader><C-[> <Esc>

nnoremap <leader>hw :action HideAllWindows<CR>
vnoremap <leader>hw :action HideAllWindows<CR>

nnoremap / :action Replace<CR>
vnoremap / :action Replace<CR>

nnoremap <leader>/ :action FindInPath<CR>
vnoremap <leader>/ :action FindInPath<CR>

nnoremap <leader>ff :action GotoFile<CR>
vnoremap <leader>ff :action GotoFile<CR>

nnoremap <leader>db :action ToggleLineBreakpoint<CR>
vnoremap <leader>db :action ToggleLineBreakpoint<CR>

nnoremap <leader>ra :action Refactorings.QuickListPopupAction<CR>
vnoremap <leader>ra :action Refactorings.QuickListPopupAction<CR>

nnoremap <leader>ka :action Vcs.QuickListPopupAction<CR>
vnoremap <leader>ka :action Vcs.QuickListPopupAction<CR>

nnoremap <leader>en :action GotoNextError<CR>
vnoremap <leader>en :action GotoNextError<CR>

nnoremap <leader>ep :action GotoPreviousError<CR>
vnoremap <leader>ep :action GotoPreviousError<CR>

